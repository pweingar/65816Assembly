
; 64tass Turbo Assembler Macro V1.55.2200 listing file
; 64tass --long-address --flat -b --m65816 --intel-hex -o lesson3.hex --list=lesson3.lst --labels=lesson3.lbl lesson3.asm
; Wed Feb 24 15:11:28 2021

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: lesson3.asm


;******  Processing file: macros.asm


;******  Return to file: lesson3.asm


;******  Processing file: vicky_ii_inc.asm

=$af0000				MASTER_CTRL_REG_L	      = $AF0000
=$01					Mstr_Ctrl_Text_Mode_En  = $01       ; Enable the Text Mode
=$02					Mstr_Ctrl_Text_Overlay  = $02       ; Enable the Overlay of the text mode on top of Graphic Mode (the Background Color is ignored)
=$04					Mstr_Ctrl_Graph_Mode_En = $04       ; Enable the Graphic Mode
=$08					Mstr_Ctrl_Bitmap_En     = $08       ; Enable the Bitmap Module In Vicky
=$10					Mstr_Ctrl_TileMap_En    = $10       ; Enable the Tile Module in Vicky
=$20					Mstr_Ctrl_Sprite_En     = $20       ; Enable the Sprite Module in Vicky
=$40					Mstr_Ctrl_GAMMA_En      = $40       ; this Enable the GAMMA correction - The Analog and DVI have different color value, the GAMMA is great to correct the difference
=$80					Mstr_Ctrl_Disable_Vid   = $80       ; This will disable the Scanning of the Video hence giving 100% bandwith to the CPU
=$af0001				MASTER_CTRL_REG_H       = $AF0001
=$01					Mstr_Ctrl_Video_Mode0   = $01       ; 0 - 640x480 (Clock @ 25.175Mhz), 1 - 800x600 (Clock @ 40Mhz)
=$02					Mstr_Ctrl_Video_Mode1   = $02       ; 0 - No Pixel Doubling, 1- Pixel Doubling (Reduce the Pixel Resolution by 2)
=$af0002				VKY_RESERVED_00         = $AF0002
=$af0003				VKY_RESERVED_01         = $AF0003
=$01					Border_Ctrl_Enable      = $01
=$af0004				BORDER_CTRL_REG         = $AF0004 ; Bit[0] - Enable (1 by default)  Bit[4..6]: X Scroll Offset ( Will scroll Left) (Acceptable Value: 0..7)
=$af0005				BORDER_COLOR_B          = $AF0005
=$af0006				BORDER_COLOR_G          = $AF0006
=$af0007				BORDER_COLOR_R          = $AF0007
=$af0008				BORDER_X_SIZE           = $AF0008; X-  Values: 0 - 32 (Default: 32)
=$af0009				BORDER_Y_SIZE           = $AF0009; Y- Values 0 -32 (Default: 32)
=$af000d				BACKGROUND_COLOR_B      = $AF000D ; When in Graphic Mode, if a pixel is "0" then the Background pixel is chosen
=$af000e				BACKGROUND_COLOR_G      = $AF000E
=$af000f				BACKGROUND_COLOR_R      = $AF000F ;
=$af0010				VKY_TXT_CURSOR_CTRL_REG = $AF0010   ;[0]  Enable Text Mode
=$01					Vky_Cursor_Enable       = $01
=$02					Vky_Cursor_Flash_Rate0  = $02
=$04					Vky_Cursor_Flash_Rate1  = $04
=$08					Vky_Cursor_FONT_Page0   = $08       ; Pick Font Page 0 or Font Page 1
=$10					Vky_Cursor_FONT_Page1   = $10       ; Pick Font Page 0 or Font Page 1
=$af0011				VKY_TXT_START_ADD_PTR   = $AF0011   ; This is an offset to change the Starting address of the Text Mode Buffer (in x)
=$af0012				VKY_TXT_CURSOR_CHAR_REG = $AF0012
=$af0013				VKY_TXT_CURSOR_COLR_REG = $AF0013
=$af0014				VKY_TXT_CURSOR_X_REG_L  = $AF0014
=$af0015				VKY_TXT_CURSOR_X_REG_H  = $AF0015
=$af0016				VKY_TXT_CURSOR_Y_REG_L  = $AF0016
=$af0017				VKY_TXT_CURSOR_Y_REG_H  = $AF0017
=$af001b				VKY_LINE_IRQ_CTRL_REG   = $AF001B ;[0] - Enable Line 0, [1] -Enable Line 1
=$af001c				VKY_LINE0_CMP_VALUE_LO  = $AF001C ;Write Only [7:0]
=$af001d				VKY_LINE0_CMP_VALUE_HI  = $AF001D ;Write Only [3:0]
=$af001e				VKY_LINE1_CMP_VALUE_LO  = $AF001E ;Write Only [7:0]
=$af001f				VKY_LINE1_CMP_VALUE_HI  = $AF001F ;Write Only [3:0]
=$af001c				VKY_INFO_CHIP_NUM_L     = $AF001C
=$af001d				VKY_INFO_CHIP_NUM_H     = $AF001D
=$af001e				VKY_INFO_CHIP_VER_L     = $AF001E
=$af001f				VKY_INFO_CHIP_VER_H     = $AF001F
=$af0500				MOUSE_PTR_GRAP0_START    = $AF0500 ; 16 x 16 = 256 Pixels (Grey Scale) 0 = Transparent, 1 = Black , 255 = White
=$af05ff				MOUSE_PTR_GRAP0_END      = $AF05FF ; Pointer 0
=$af0600				MOUSE_PTR_GRAP1_START    = $AF0600 ;
=$af06ff				MOUSE_PTR_GRAP1_END      = $AF06FF ; Pointer 1
=$af0700				MOUSE_PTR_CTRL_REG_L    = $AF0700 ; Bit[0] Enable, Bit[1] = 0  ( 0 = Pointer0, 1 = Pointer1)
=$af0701				MOUSE_PTR_CTRL_REG_H    = $AF0701 ;
=$af0702				MOUSE_PTR_X_POS_L       = $AF0702 ; X Position (0 - 639) (Can only read now) Writing will have no effect
=$af0703				MOUSE_PTR_X_POS_H       = $AF0703 ;
=$af0704				MOUSE_PTR_Y_POS_L       = $AF0704 ; Y Position (0 - 479) (Can only read now) Writing will have no effect
=$af0705				MOUSE_PTR_Y_POS_H       = $AF0705 ;
=$af0706				MOUSE_PTR_BYTE0         = $AF0706 ; Byte 0 of Mouse Packet (you must write 3 Bytes)
=$af0707				MOUSE_PTR_BYTE1         = $AF0707 ; Byte 1 of Mouse Packet (if you don't, then )
=$af0708				MOUSE_PTR_BYTE2         = $AF0708 ; Byte 2 of Mouse Packet (state Machine will be jammed in 1 state)
=$af070b				C256F_MODEL_MAJOR       = $AF070B ;
=$af070c				C256F_MODEL_MINOR       = $AF070C ;
=$af070d				FPGA_DOR                = $AF070D ;
=$af070e				FPGA_MOR                = $AF070E ;
=$af070f				FPGA_YOR                = $AF070F ;
=$af1f40				FG_CHAR_LUT_PTR         = $AF1F40
=$af1f80				BG_CHAR_LUT_PTR		    = $AF1F80
=$af2000				GRPH_LUT0_PTR		    = $AF2000
=$af2400				GRPH_LUT1_PTR		    = $AF2400
=$af2800				GRPH_LUT2_PTR		    = $AF2800
=$af2c00				GRPH_LUT3_PTR		    = $AF2C00
=$af3000				GRPH_LUT4_PTR		    = $AF3000
=$af3400				GRPH_LUT5_PTR		    = $AF3400
=$af3800				GRPH_LUT6_PTR		    = $AF3800
=$af3c00				GRPH_LUT7_PTR		    = $AF3C00
=$af4000				GAMMA_B_LUT_PTR		    = $AF4000
=$af4100				GAMMA_G_LUT_PTR		    = $AF4100
=$af4200				GAMMA_R_LUT_PTR		    = $AF4200
=$af8000				FONT_MEMORY_BANK0       = $AF8000     ;$AF8000 - $AF87FF
=$af8800				FONT_MEMORY_BANK1       = $AF8800     ;$AF8800 - $AF8FFF
=$afa000				CS_TEXT_MEM_PTR         = $AFA000
=$afc000				CS_COLOR_MEM_PTR        = $AFC000
=$afe000				BTX_START               = $AFE000     ; BEATRIX Registers
=$afffff				BTX_END                 = $AFFFFF

;******  Return to file: lesson3.asm


;******  Processing file: VKYII_CFP9553_SPRITE_def.asm

=$01					SPRITE_Enable             = $01
=$00					SPRITE_LUT0               = $00 ; This is the LUT that the Sprite will use
=$02					SPRITE_LUT1               = $02
=$04					SPRITE_LUT2               = $04
=$06					SPRITE_LUT3               = $06
=$08					SPRITE_LUT4               = $08
=$0a					SPRITE_LUT5               = $0A
=$0c					SPRITE_LUT6               = $0C
=$0e					SPRITE_LUT7               = $0E
=$00					SPRITE_DEPTH0             = $00
=$10					SPRITE_DEPTH1             = $10
=$20					SPRITE_DEPTH2             = $20
=$30					SPRITE_DEPTH3             = $30
=$40					SPRITE_DEPTH4             = $40
=$50					SPRITE_DEPTH5             = $50
=$60					SPRITE_DEPTH6             = $60
=$80					SPRITE_Collision_On       = $80 ; Enable the Collision Detection
=$af0c00				SP00_CONTROL_REG        = $AF0C00
=$af0c01				SP00_ADDY_PTR_L         = $AF0C01
=$af0c02				SP00_ADDY_PTR_M         = $AF0C02
=$af0c03				SP00_ADDY_PTR_H         = $AF0C03
=$af0c04				SP00_X_POS_L            = $AF0C04
=$af0c05				SP00_X_POS_H            = $AF0C05
=$af0c06				SP00_Y_POS_L            = $AF0C06
=$af0c07				SP00_Y_POS_H            = $AF0C07
=$af0c08				SP01_CONTROL_REG        = $AF0C08
=$af0c09				SP01_ADDY_PTR_L         = $AF0C09
=$af0c0a				SP01_ADDY_PTR_M         = $AF0C0A
=$af0c0b				SP01_ADDY_PTR_H         = $AF0C0B
=$af0c0c				SP01_X_POS_L            = $AF0C0C
=$af0c0d				SP01_X_POS_H            = $AF0C0D
=$af0c0e				SP01_Y_POS_L            = $AF0C0E
=$af0c0f				SP01_Y_POS_H            = $AF0C0F
=$af0c10				SP02_CONTROL_REG        = $AF0C10
=$af0c11				SP02_ADDY_PTR_L         = $AF0C11
=$af0c12				SP02_ADDY_PTR_M         = $AF0C12
=$af0c13				SP02_ADDY_PTR_H         = $AF0C13
=$af0c14				SP02_X_POS_L            = $AF0C14
=$af0c15				SP02_X_POS_H            = $AF0C15
=$af0c16				SP02_Y_POS_L            = $AF0C16
=$af0c17				SP02_Y_POS_H            = $AF0C17
=$af0c18				SP03_CONTROL_REG        = $AF0C18
=$af0c19				SP03_ADDY_PTR_L         = $AF0C19
=$af0c1a				SP03_ADDY_PTR_M         = $AF0C1A
=$af0c1b				SP03_ADDY_PTR_H         = $AF0C1B
=$af0c1c				SP03_X_POS_L            = $AF0C1C
=$af0c1d				SP03_X_POS_H            = $AF0C1D
=$af0c1e				SP03_Y_POS_L            = $AF0C1E
=$af0c1f				SP03_Y_POS_H            = $AF0C1F
=$af0c20				SP04_CONTROL_REG        = $AF0C20
=$af0c21				SP04_ADDY_PTR_L         = $AF0C21
=$af0c22				SP04_ADDY_PTR_M         = $AF0C22
=$af0c23				SP04_ADDY_PTR_H         = $AF0C23
=$af0c24				SP04_X_POS_L            = $AF0C24
=$af0c25				SP04_X_POS_H            = $AF0C25
=$af0c26				SP04_Y_POS_L            = $AF0C26
=$af0c27				SP04_Y_POS_H            = $AF0C27
=$af0c28				SP05_CONTROL_REG        = $AF0C28
=$af0c29				SP05_ADDY_PTR_L         = $AF0C29
=$af0c2a				SP05_ADDY_PTR_M         = $AF0C2A
=$af0c2b				SP05_ADDY_PTR_H         = $AF0C2B
=$af0c2c				SP05_X_POS_L            = $AF0C2C
=$af0c2d				SP05_X_POS_H            = $AF0C2D
=$af0c2e				SP05_Y_POS_L            = $AF0C2E
=$af0c2f				SP05_Y_POS_H            = $AF0C2F
=$af0c30				SP06_CONTROL_REG        = $AF0C30
=$af0c31				SP06_ADDY_PTR_L         = $AF0C31
=$af0c32				SP06_ADDY_PTR_M         = $AF0C32
=$af0c33				SP06_ADDY_PTR_H         = $AF0C33
=$af0c34				SP06_X_POS_L            = $AF0C34
=$af0c35				SP06_X_POS_H            = $AF0C35
=$af0c36				SP06_Y_POS_L            = $AF0C36
=$af0c37				SP06_Y_POS_H            = $AF0C37
=$af0c38				SP07_CONTROL_REG        = $AF0C38
=$af0c39				SP07_ADDY_PTR_L         = $AF0C39
=$af0c3a				SP07_ADDY_PTR_M         = $AF0C3A
=$af0c3b				SP07_ADDY_PTR_H         = $AF0C3B
=$af0c3c				SP07_X_POS_L            = $AF0C3C
=$af0c3d				SP07_X_POS_H            = $AF0C3D
=$af0c3e				SP07_Y_POS_L            = $AF0C3E
=$af0c3f				SP07_Y_POS_H            = $AF0C3F
=$af0c40				SP08_CONTROL_REG        = $AF0C40
=$af0c41				SP08_ADDY_PTR_L         = $AF0C41
=$af0c42				SP08_ADDY_PTR_M         = $AF0C42
=$af0c43				SP08_ADDY_PTR_H         = $AF0C43
=$af0c44				SP08_X_POS_L            = $AF0C44
=$af0c45				SP08_X_POS_H            = $AF0C45
=$af0c46				SP08_Y_POS_L            = $AF0C46
=$af0c47				SP08_Y_POS_H            = $AF0C47
=$af0c48				SP09_CONTROL_REG        = $AF0C48
=$af0c49				SP09_ADDY_PTR_L         = $AF0C49
=$af0c4a				SP09_ADDY_PTR_M         = $AF0C4A
=$af0c4b				SP09_ADDY_PTR_H         = $AF0C4B
=$af0c4c				SP09_X_POS_L            = $AF0C4C
=$af0c4d				SP09_X_POS_H            = $AF0C4D
=$af0c4e				SP09_Y_POS_L            = $AF0C4E
=$af0c4f				SP09_Y_POS_H            = $AF0C4F
=$af0c50				SP10_CONTROL_REG        = $AF0C50
=$af0c51				SP10_ADDY_PTR_L         = $AF0C51
=$af0c52				SP10_ADDY_PTR_M         = $AF0C52
=$af0c53				SP10_ADDY_PTR_H         = $AF0C53
=$af0c54				SP10_X_POS_L            = $AF0C54
=$af0c55				SP10_X_POS_H            = $AF0C55
=$af0c56				SP10_Y_POS_L            = $AF0C56
=$af0c57				SP10_Y_POS_H            = $AF0C57
=$af0c58				SP11_CONTROL_REG        = $AF0C58
=$af0c59				SP11_ADDY_PTR_L         = $AF0C59
=$af0c5a				SP11_ADDY_PTR_M         = $AF0C5A
=$af0c5b				SP11_ADDY_PTR_H         = $AF0C5B
=$af0c5c				SP11_X_POS_L            = $AF0C5C
=$af0c5d				SP11_X_POS_H            = $AF0C5D
=$af0c5e				SP11_Y_POS_L            = $AF0C5E
=$af0c5f				SP11_Y_POS_H            = $AF0C5F
=$af0c60				SP12_CONTROL_REG        = $AF0C60
=$af0c61				SP12_ADDY_PTR_L         = $AF0C61
=$af0c62				SP12_ADDY_PTR_M         = $AF0C62
=$af0c63				SP12_ADDY_PTR_H         = $AF0C63
=$af0c64				SP12_X_POS_L            = $AF0C64
=$af0c65				SP12_X_POS_H            = $AF0C65
=$af0c66				SP12_Y_POS_L            = $AF0C66
=$af0c67				SP12_Y_POS_H            = $AF0C67
=$af0c68				SP13_CONTROL_REG        = $AF0C68
=$af0c69				SP13_ADDY_PTR_L         = $AF0C69
=$af0c6a				SP13_ADDY_PTR_M         = $AF0C6A
=$af0c6b				SP13_ADDY_PTR_H         = $AF0C6B
=$af0c6c				SP13_X_POS_L            = $AF0C6C
=$af0c6d				SP13_X_POS_H            = $AF0C6D
=$af0c6e				SP13_Y_POS_L            = $AF0C6E
=$af0c6f				SP13_Y_POS_H            = $AF0C6F
=$af0c70				SP14_CONTROL_REG        = $AF0C70
=$af0c71				SP14_ADDY_PTR_L         = $AF0C71
=$af0c72				SP14_ADDY_PTR_M         = $AF0C72
=$af0c73				SP14_ADDY_PTR_H         = $AF0C73
=$af0c74				SP14_X_POS_L            = $AF0C74
=$af0c75				SP14_X_POS_H            = $AF0C75
=$af0c76				SP14_Y_POS_L            = $AF0C76
=$af0c77				SP14_Y_POS_H            = $AF0C77
=$af0c78				SP15_CONTROL_REG        = $AF0C78
=$af0c79				SP15_ADDY_PTR_L         = $AF0C79
=$af0c7a				SP15_ADDY_PTR_M         = $AF0C7A
=$af0c7b				SP15_ADDY_PTR_H         = $AF0C7B
=$af0c7c				SP15_X_POS_L            = $AF0C7C
=$af0c7d				SP15_X_POS_H            = $AF0C7D
=$af0c7e				SP15_Y_POS_L            = $AF0C7E
=$af0c7f				SP15_Y_POS_H            = $AF0C7F
=$af0c80				SP16_CONTROL_REG        = $AF0C80
=$af0c81				SP16_ADDY_PTR_L         = $AF0C81
=$af0c82				SP16_ADDY_PTR_M         = $AF0C82
=$af0c83				SP16_ADDY_PTR_H         = $AF0C83
=$af0c84				SP16_X_POS_L            = $AF0C84
=$af0c85				SP16_X_POS_H            = $AF0C85
=$af0c86				SP16_Y_POS_L            = $AF0C86
=$af0c87				SP16_Y_POS_H            = $AF0C87
=$af0c88				SP17_CONTROL_REG        = $AF0C88
=$af0c89				SP17_ADDY_PTR_L         = $AF0C89
=$af0c8a				SP17_ADDY_PTR_M         = $AF0C8A
=$af0c8b				SP17_ADDY_PTR_H         = $AF0C8B
=$af0c8c				SP17_X_POS_L            = $AF0C8C
=$af0c8d				SP17_X_POS_H            = $AF0C8D
=$af0c8e				SP17_Y_POS_L            = $AF0C8E
=$af0c8f				SP17_Y_POS_H            = $AF0C8F
=$af0c90				SP18_CONTROL_REG        = $AF0C90
=$af0c91				SP18_ADDY_PTR_L         = $AF0C91
=$af0c92				SP18_ADDY_PTR_M         = $AF0C92
=$af0c93				SP18_ADDY_PTR_H         = $AF0C93
=$af0c94				SP18_X_POS_L            = $AF0C94
=$af0c95				SP18_X_POS_H            = $AF0C95
=$af0c96				SP18_Y_POS_L            = $AF0C96
=$af0c97				SP18_Y_POS_H            = $AF0C97
=$af0c98				SP19_CONTROL_REG        = $AF0C98
=$af0c99				SP19_ADDY_PTR_L         = $AF0C99
=$af0c9a				SP19_ADDY_PTR_M         = $AF0C9A
=$af0c9b				SP19_ADDY_PTR_H         = $AF0C9B
=$af0c9c				SP19_X_POS_L            = $AF0C9C
=$af0c9d				SP19_X_POS_H            = $AF0C9D
=$af0c9e				SP19_Y_POS_L            = $AF0C9E
=$af0c9f				SP19_Y_POS_H            = $AF0C9F
=$af0ca0				SP20_CONTROL_REG        = $AF0CA0
=$af0ca1				SP20_ADDY_PTR_L         = $AF0CA1
=$af0ca2				SP20_ADDY_PTR_M         = $AF0CA2
=$af0ca3				SP20_ADDY_PTR_H         = $AF0CA3
=$af0ca4				SP20_X_POS_L            = $AF0CA4
=$af0ca5				SP20_X_POS_H            = $AF0CA5
=$af0ca6				SP20_Y_POS_L            = $AF0CA6
=$af0ca7				SP20_Y_POS_H            = $AF0CA7
=$af0ca8				SP21_CONTROL_REG        = $AF0CA8
=$af0ca9				SP21_ADDY_PTR_L         = $AF0CA9
=$af0caa				SP21_ADDY_PTR_M         = $AF0CAA
=$af0cab				SP21_ADDY_PTR_H         = $AF0CAB
=$af0cac				SP21_X_POS_L            = $AF0CAC
=$af0cad				SP21_X_POS_H            = $AF0CAD
=$af0cae				SP21_Y_POS_L            = $AF0CAE
=$af0caf				SP21_Y_POS_H            = $AF0CAF
=$af0cb0				SP22_CONTROL_REG        = $AF0CB0
=$af0cb1				SP22_ADDY_PTR_L         = $AF0CB1
=$af0cb2				SP22_ADDY_PTR_M         = $AF0CB2
=$af0cb3				SP22_ADDY_PTR_H         = $AF0CB3
=$af0cb4				SP22_X_POS_L            = $AF0CB4
=$af0cb5				SP22_X_POS_H            = $AF0CB5
=$af0cb6				SP22_Y_POS_L            = $AF0CB6
=$af0cb7				SP22_Y_POS_H            = $AF0CB7
=$af0cb8				SP23_CONTROL_REG        = $AF0CB8
=$af0cb9				SP23_ADDY_PTR_L         = $AF0CB9
=$af0cba				SP23_ADDY_PTR_M         = $AF0CBA
=$af0cbb				SP23_ADDY_PTR_H         = $AF0CBB
=$af0cbc				SP23_X_POS_L            = $AF0CBC
=$af0cbd				SP23_X_POS_H            = $AF0CBD
=$af0cbe				SP23_Y_POS_L            = $AF0CBE
=$af0cbf				SP23_Y_POS_H            = $AF0CBF
=$af0cc0				SP24_CONTROL_REG        = $AF0CC0
=$af0cc1				SP24_ADDY_PTR_L         = $AF0CC1
=$af0cc2				SP24_ADDY_PTR_M         = $AF0CC2
=$af0cc3				SP24_ADDY_PTR_H         = $AF0CC3
=$af0cc4				SP24_X_POS_L            = $AF0CC4
=$af0cc5				SP24_X_POS_H            = $AF0CC5
=$af0cc6				SP24_Y_POS_L            = $AF0CC6
=$af0cc7				SP24_Y_POS_H            = $AF0CC7
=$af0cc8				SP25_CONTROL_REG        = $AF0CC8
=$af0cc9				SP25_ADDY_PTR_L         = $AF0CC9
=$af0cca				SP25_ADDY_PTR_M         = $AF0CCA
=$af0ccb				SP25_ADDY_PTR_H         = $AF0CCB
=$af0ccc				SP25_X_POS_L            = $AF0CCC
=$af0ccd				SP25_X_POS_H            = $AF0CCD
=$af0cce				SP25_Y_POS_L            = $AF0CCE
=$af0ccf				SP25_Y_POS_H            = $AF0CCF
=$af0cd0				SP26_CONTROL_REG        = $AF0CD0
=$af0cd1				SP26_ADDY_PTR_L         = $AF0CD1
=$af0cd2				SP26_ADDY_PTR_M         = $AF0CD2
=$af0cd3				SP26_ADDY_PTR_H         = $AF0CD3
=$af0cd4				SP26_X_POS_L            = $AF0CD4
=$af0cd5				SP26_X_POS_H            = $AF0CD5
=$af0cd6				SP26_Y_POS_L            = $AF0CD6
=$af0cd7				SP26_Y_POS_H            = $AF0CD7
=$af0cd8				SP27_CONTROL_REG        = $AF0CD8
=$af0cd9				SP27_ADDY_PTR_L         = $AF0CD9
=$af0cda				SP27_ADDY_PTR_M         = $AF0CDA
=$af0cdb				SP27_ADDY_PTR_H         = $AF0CDB
=$af0cdc				SP27_X_POS_L            = $AF0CDC
=$af0cdd				SP27_X_POS_H            = $AF0CDD
=$af0cde				SP27_Y_POS_L            = $AF0CDE
=$af0cdf				SP27_Y_POS_H            = $AF0CDF
=$af0ce0				SP28_CONTROL_REG        = $AF0CE0
=$af0ce1				SP28_ADDY_PTR_L         = $AF0CE1
=$af0ce2				SP28_ADDY_PTR_M         = $AF0CE2
=$af0ce3				SP28_ADDY_PTR_H         = $AF0CE3
=$af0ce4				SP28_X_POS_L            = $AF0CE4
=$af0ce5				SP28_X_POS_H            = $AF0CE5
=$af0ce6				SP28_Y_POS_L            = $AF0CE6
=$af0ce7				SP28_Y_POS_H            = $AF0CE7
=$af0ce8				SP29_CONTROL_REG        = $AF0CE8
=$af0ce9				SP29_ADDY_PTR_L         = $AF0CE9
=$af0cea				SP29_ADDY_PTR_M         = $AF0CEA
=$af0ceb				SP29_ADDY_PTR_H         = $AF0CEB
=$af0cec				SP29_X_POS_L            = $AF0CEC
=$af0ced				SP29_X_POS_H            = $AF0CED
=$af0cee				SP29_Y_POS_L            = $AF0CEE
=$af0cef				SP29_Y_POS_H            = $AF0CEF
=$af0cf0				SP30_CONTROL_REG        = $AF0CF0
=$af0cf1				SP30_ADDY_PTR_L         = $AF0CF1
=$af0cf2				SP30_ADDY_PTR_M         = $AF0CF2
=$af0cf3				SP30_ADDY_PTR_H         = $AF0CF3
=$af0cf4				SP30_X_POS_L            = $AF0CF4
=$af0cf5				SP30_X_POS_H            = $AF0CF5
=$af0cf6				SP30_Y_POS_L            = $AF0CF6
=$af0cf7				SP30_Y_POS_H            = $AF0CF7
=$af0cf8				SP31_CONTROL_REG        = $AF0CF8
=$af0cf9				SP31_ADDY_PTR_L         = $AF0CF9
=$af0cfa				SP31_ADDY_PTR_M         = $AF0CFA
=$af0cfb				SP31_ADDY_PTR_H         = $AF0CFB
=$af0cfc				SP31_X_POS_L            = $AF0CFC
=$af0cfd				SP31_X_POS_H            = $AF0CFD
=$af0cfe				SP31_Y_POS_L            = $AF0CFE
=$af0cff				SP31_Y_POS_H            = $AF0CFF
=$af0d00				SP32_CONTROL_REG        = $AF0D00
=$af0d01				SP32_ADDY_PTR_L         = $AF0D01
=$af0d02				SP32_ADDY_PTR_M         = $AF0D02
=$af0d03				SP32_ADDY_PTR_H         = $AF0D03
=$af0d04				SP32_X_POS_L            = $AF0D04
=$af0d05				SP32_X_POS_H            = $AF0D05
=$af0d06				SP32_Y_POS_L            = $AF0D06
=$af0d07				SP32_Y_POS_H            = $AF0D07
=$af0d08				SP33_CONTROL_REG        = $AF0D08
=$af0d09				SP33_ADDY_PTR_L         = $AF0D09
=$af0d0a				SP33_ADDY_PTR_M         = $AF0D0A
=$af0d0b				SP33_ADDY_PTR_H         = $AF0D0B
=$af0d0c				SP33_X_POS_L            = $AF0D0C
=$af0d0d				SP33_X_POS_H            = $AF0D0D
=$af0d0e				SP33_Y_POS_L            = $AF0D0E
=$af0d0f				SP33_Y_POS_H            = $AF0D0F
=$af0d10				SP34_CONTROL_REG        = $AF0D10
=$af0d11				SP34_ADDY_PTR_L         = $AF0D11
=$af0d12				SP34_ADDY_PTR_M         = $AF0D12
=$af0d13				SP34_ADDY_PTR_H         = $AF0D13
=$af0d14				SP34_X_POS_L            = $AF0D14
=$af0d15				SP34_X_POS_H            = $AF0D15
=$af0d16				SP34_Y_POS_L            = $AF0D16
=$af0d17				SP34_Y_POS_H            = $AF0D17
=$af0d18				SP35_CONTROL_REG        = $AF0D18
=$af0d19				SP35_ADDY_PTR_L         = $AF0D19
=$af0d1a				SP35_ADDY_PTR_M         = $AF0D1A
=$af0d1b				SP35_ADDY_PTR_H         = $AF0D1B
=$af0d1c				SP35_X_POS_L            = $AF0D1C
=$af0d1d				SP35_X_POS_H            = $AF0D1D
=$af0d1e				SP35_Y_POS_L            = $AF0D1E
=$af0d1f				SP35_Y_POS_H            = $AF0D1F
=$af0d20				SP36_CONTROL_REG        = $AF0D20
=$af0d21				SP36_ADDY_PTR_L         = $AF0D21
=$af0d22				SP36_ADDY_PTR_M         = $AF0D22
=$af0d23				SP36_ADDY_PTR_H         = $AF0D23
=$af0d24				SP36_X_POS_L            = $AF0D24
=$af0d25				SP36_X_POS_H            = $AF0D25
=$af0d26				SP36_Y_POS_L            = $AF0D26
=$af0d27				SP36_Y_POS_H            = $AF0D27
=$af0d28				SP37_CONTROL_REG        = $AF0D28
=$af0d29				SP37_ADDY_PTR_L         = $AF0D29
=$af0d2a				SP37_ADDY_PTR_M         = $AF0D2A
=$af0d2b				SP37_ADDY_PTR_H         = $AF0D2B
=$af0d2c				SP37_X_POS_L            = $AF0D2C
=$af0d2d				SP37_X_POS_H            = $AF0D2D
=$af0d2e				SP37_Y_POS_L            = $AF0D2E
=$af0d2f				SP37_Y_POS_H            = $AF0D2F
=$af0d30				SP38_CONTROL_REG        = $AF0D30
=$af0d31				SP38_ADDY_PTR_L         = $AF0D31
=$af0d32				SP38_ADDY_PTR_M         = $AF0D32
=$af0d33				SP38_ADDY_PTR_H         = $AF0D33
=$af0d34				SP38_X_POS_L            = $AF0D34
=$af0d35				SP38_X_POS_H            = $AF0D35
=$af0d36				SP38_Y_POS_L            = $AF0D36
=$af0d37				SP38_Y_POS_H            = $AF0D37
=$af0d38				SP39_CONTROL_REG        = $AF0D38
=$af0d39				SP39_ADDY_PTR_L         = $AF0D39
=$af0d3a				SP39_ADDY_PTR_M         = $AF0D3A
=$af0d3b				SP39_ADDY_PTR_H         = $AF0D3B
=$af0d3c				SP39_X_POS_L            = $AF0D3C
=$af0d3d				SP39_X_POS_H            = $AF0D3D
=$af0d3e				SP39_Y_POS_L            = $AF0D3E
=$af0d3f				SP39_Y_POS_H            = $AF0D3F
=$af0d40				SP40_CONTROL_REG        = $AF0D40
=$af0d41				SP40_ADDY_PTR_L         = $AF0D41
=$af0d42				SP40_ADDY_PTR_M         = $AF0D42
=$af0d43				SP40_ADDY_PTR_H         = $AF0D43
=$af0d44				SP40_X_POS_L            = $AF0D44
=$af0d45				SP40_X_POS_H            = $AF0D45
=$af0d46				SP40_Y_POS_L            = $AF0D46
=$af0d47				SP40_Y_POS_H            = $AF0D47
=$af0d48				SP41_CONTROL_REG        = $AF0D48
=$af0d49				SP41_ADDY_PTR_L         = $AF0D49
=$af0d4a				SP41_ADDY_PTR_M         = $AF0D4A
=$af0d4b				SP41_ADDY_PTR_H         = $AF0D4B
=$af0d4c				SP41_X_POS_L            = $AF0D4C
=$af0d4d				SP41_X_POS_H            = $AF0D4D
=$af0d4e				SP41_Y_POS_L            = $AF0D4E
=$af0d4f				SP41_Y_POS_H            = $AF0D4F
=$af0d50				SP42_CONTROL_REG        = $AF0D50
=$af0d51				SP42_ADDY_PTR_L         = $AF0D51
=$af0d52				SP42_ADDY_PTR_M         = $AF0D52
=$af0d53				SP42_ADDY_PTR_H         = $AF0D53
=$af0d54				SP42_X_POS_L            = $AF0D54
=$af0d55				SP42_X_POS_H            = $AF0D55
=$af0d56				SP42_Y_POS_L            = $AF0D56
=$af0d57				SP42_Y_POS_H            = $AF0D57
=$af0d58				SP43_CONTROL_REG        = $AF0D58
=$af0d59				SP43_ADDY_PTR_L         = $AF0D59
=$af0d5a				SP43_ADDY_PTR_M         = $AF0D5A
=$af0d5b				SP43_ADDY_PTR_H         = $AF0D5B
=$af0d5c				SP43_X_POS_L            = $AF0D5C
=$af0d5d				SP43_X_POS_H            = $AF0D5D
=$af0d5e				SP43_Y_POS_L            = $AF0D5E
=$af0d5f				SP43_Y_POS_H            = $AF0D5F
=$af0d60				SP44_CONTROL_REG        = $AF0D60
=$af0d61				SP44_ADDY_PTR_L         = $AF0D61
=$af0d62				SP44_ADDY_PTR_M         = $AF0D62
=$af0d63				SP44_ADDY_PTR_H         = $AF0D63
=$af0d64				SP44_X_POS_L            = $AF0D64
=$af0d65				SP44_X_POS_H            = $AF0D65
=$af0d66				SP44_Y_POS_L            = $AF0D66
=$af0d67				SP44_Y_POS_H            = $AF0D67
=$af0d68				SP45_CONTROL_REG        = $AF0D68
=$af0d69				SP45_ADDY_PTR_L         = $AF0D69
=$af0d6a				SP45_ADDY_PTR_M         = $AF0D6A
=$af0d6b				SP45_ADDY_PTR_H         = $AF0D6B
=$af0d6c				SP45_X_POS_L            = $AF0D6C
=$af0d6d				SP45_X_POS_H            = $AF0D6D
=$af0d6e				SP45_Y_POS_L            = $AF0D6E
=$af0d6f				SP45_Y_POS_H            = $AF0D6F
=$af0d70				SP46_CONTROL_REG        = $AF0D70
=$af0d71				SP46_ADDY_PTR_L         = $AF0D71
=$af0d72				SP46_ADDY_PTR_M         = $AF0D72
=$af0d73				SP46_ADDY_PTR_H         = $AF0D73
=$af0d74				SP46_X_POS_L            = $AF0D74
=$af0d75				SP46_X_POS_H            = $AF0D75
=$af0d76				SP46_Y_POS_L            = $AF0D76
=$af0d77				SP46_Y_POS_H            = $AF0D77
=$af0d78				SP47_CONTROL_REG        = $AF0D78
=$af0d79				SP47_ADDY_PTR_L         = $AF0D79
=$af0d7a				SP47_ADDY_PTR_M         = $AF0D7A
=$af0d7b				SP47_ADDY_PTR_H         = $AF0D7B
=$af0d7c				SP47_X_POS_L            = $AF0D7C
=$af0d7d				SP47_X_POS_H            = $AF0D7D
=$af0d7e				SP47_Y_POS_L            = $AF0D7E
=$af0d7f				SP47_Y_POS_H            = $AF0D7F
=$af0d80				SP48_CONTROL_REG        = $AF0D80
=$af0d81				SP48_ADDY_PTR_L         = $AF0D81
=$af0d82				SP48_ADDY_PTR_M         = $AF0D82
=$af0d83				SP48_ADDY_PTR_H         = $AF0D83
=$af0d84				SP48_X_POS_L            = $AF0D84
=$af0d85				SP48_X_POS_H            = $AF0D85
=$af0d86				SP48_Y_POS_L            = $AF0D86
=$af0d87				SP48_Y_POS_H            = $AF0D87
=$af0d88				SP49_CONTROL_REG        = $AF0D88
=$af0d89				SP49_ADDY_PTR_L         = $AF0D89
=$af0d8a				SP49_ADDY_PTR_M         = $AF0D8A
=$af0d8b				SP49_ADDY_PTR_H         = $AF0D8B
=$af0d8c				SP49_X_POS_L            = $AF0D8C
=$af0d8d				SP49_X_POS_H            = $AF0D8D
=$af0d8e				SP49_Y_POS_L            = $AF0D8E
=$af0d8f				SP49_Y_POS_H            = $AF0D8F
=$af0d90				SP50_CONTROL_REG        = $AF0D90
=$af0d91				SP50_ADDY_PTR_L         = $AF0D91
=$af0d92				SP50_ADDY_PTR_M         = $AF0D92
=$af0d93				SP50_ADDY_PTR_H         = $AF0D93
=$af0d94				SP50_X_POS_L            = $AF0D94
=$af0d95				SP50_X_POS_H            = $AF0D95
=$af0d96				SP50_Y_POS_L            = $AF0D96
=$af0d97				SP50_Y_POS_H            = $AF0D97
=$af0d98				SP51_CONTROL_REG        = $AF0D98
=$af0d99				SP51_ADDY_PTR_L         = $AF0D99
=$af0d9a				SP51_ADDY_PTR_M         = $AF0D9A
=$af0d9b				SP51_ADDY_PTR_H         = $AF0D9B
=$af0d9c				SP51_X_POS_L            = $AF0D9C
=$af0d9d				SP51_X_POS_H            = $AF0D9D
=$af0d9e				SP51_Y_POS_L            = $AF0D9E
=$af0d9f				SP51_Y_POS_H            = $AF0D9F
=$af0da0				SP52_CONTROL_REG        = $AF0DA0
=$af0da1				SP52_ADDY_PTR_L         = $AF0DA1
=$af0da2				SP52_ADDY_PTR_M         = $AF0DA2
=$af0da3				SP52_ADDY_PTR_H         = $AF0DA3
=$af0da4				SP52_X_POS_L            = $AF0DA4
=$af0da5				SP52_X_POS_H            = $AF0DA5
=$af0da6				SP52_Y_POS_L            = $AF0DA6
=$af0da7				SP52_Y_POS_H            = $AF0DA7
=$af0da8				SP53_CONTROL_REG        = $AF0DA8
=$af0da9				SP53_ADDY_PTR_L         = $AF0DA9
=$af0daa				SP53_ADDY_PTR_M         = $AF0DAA
=$af0dab				SP53_ADDY_PTR_H         = $AF0DAB
=$af0dac				SP53_X_POS_L            = $AF0DAC
=$af0dad				SP53_X_POS_H            = $AF0DAD
=$af0dae				SP53_Y_POS_L            = $AF0DAE
=$af0daf				SP53_Y_POS_H            = $AF0DAF
=$af0db0				SP54_CONTROL_REG        = $AF0DB0
=$af0db1				SP54_ADDY_PTR_L         = $AF0DB1
=$af0db2				SP54_ADDY_PTR_M         = $AF0DB2
=$af0db3				SP54_ADDY_PTR_H         = $AF0DB3
=$af0db4				SP54_X_POS_L            = $AF0DB4
=$af0db5				SP54_X_POS_H            = $AF0DB5
=$af0db6				SP54_Y_POS_L            = $AF0DB6
=$af0db7				SP54_Y_POS_H            = $AF0DB7
=$af0db8				SP55_CONTROL_REG        = $AF0DB8
=$af0db9				SP55_ADDY_PTR_L         = $AF0DB9
=$af0dba				SP55_ADDY_PTR_M         = $AF0DBA
=$af0dbb				SP55_ADDY_PTR_H         = $AF0DBB
=$af0dbc				SP55_X_POS_L            = $AF0DBC
=$af0dbd				SP55_X_POS_H            = $AF0DBD
=$af0dbe				SP55_Y_POS_L            = $AF0DBE
=$af0dbf				SP55_Y_POS_H            = $AF0DBF
=$af0dc0				SP56_CONTROL_REG        = $AF0DC0
=$af0dc1				SP56_ADDY_PTR_L         = $AF0DC1
=$af0dc2				SP56_ADDY_PTR_M         = $AF0DC2
=$af0dc3				SP56_ADDY_PTR_H         = $AF0DC3
=$af0dc4				SP56_X_POS_L            = $AF0DC4
=$af0dc5				SP56_X_POS_H            = $AF0DC5
=$af0dc6				SP56_Y_POS_L            = $AF0DC6
=$af0dc7				SP56_Y_POS_H            = $AF0DC7
=$af0dc8				SP57_CONTROL_REG        = $AF0DC8
=$af0dc9				SP57_ADDY_PTR_L         = $AF0DC9
=$af0dca				SP57_ADDY_PTR_M         = $AF0DCA
=$af0dcb				SP57_ADDY_PTR_H         = $AF0DCB
=$af0dcc				SP57_X_POS_L            = $AF0DCC
=$af0dcd				SP57_X_POS_H            = $AF0DCD
=$af0dce				SP57_Y_POS_L            = $AF0DCE
=$af0dcf				SP57_Y_POS_H            = $AF0DCF
=$af0dd0				SP58_CONTROL_REG        = $AF0DD0
=$af0dd1				SP58_ADDY_PTR_L         = $AF0DD1
=$af0dd2				SP58_ADDY_PTR_M         = $AF0DD2
=$af0dd3				SP58_ADDY_PTR_H         = $AF0DD3
=$af0dd4				SP58_X_POS_L            = $AF0DD4
=$af0dd5				SP58_X_POS_H            = $AF0DD5
=$af0dd6				SP58_Y_POS_L            = $AF0DD6
=$af0dd7				SP58_Y_POS_H            = $AF0DD7
=$af0dd8				SP59_CONTROL_REG        = $AF0DD8
=$af0dd9				SP59_ADDY_PTR_L         = $AF0DD9
=$af0dda				SP59_ADDY_PTR_M         = $AF0DDA
=$af0ddb				SP59_ADDY_PTR_H         = $AF0DDB
=$af0ddc				SP59_X_POS_L            = $AF0DDC
=$af0ddd				SP59_X_POS_H            = $AF0DDD
=$af0dde				SP59_Y_POS_L            = $AF0DDE
=$af0ddf				SP59_Y_POS_H            = $AF0DDF
=$af0de0				SP60_CONTROL_REG        = $AF0DE0
=$af0de1				SP60_ADDY_PTR_L         = $AF0DE1
=$af0de2				SP60_ADDY_PTR_M         = $AF0DE2
=$af0de3				SP60_ADDY_PTR_H         = $AF0DE3
=$af0de4				SP60_X_POS_L            = $AF0DE4
=$af0de5				SP60_X_POS_H            = $AF0DE5
=$af0de6				SP60_Y_POS_L            = $AF0DE6
=$af0de7				SP60_Y_POS_H            = $AF0DE7
=$af0de8				SP61_CONTROL_REG        = $AF0DE8
=$af0de9				SP61_ADDY_PTR_L         = $AF0DE9
=$af0dea				SP61_ADDY_PTR_M         = $AF0DEA
=$af0deb				SP61_ADDY_PTR_H         = $AF0DEB
=$af0dec				SP61_X_POS_L            = $AF0DEC
=$af0ded				SP61_X_POS_H            = $AF0DED
=$af0dee				SP61_Y_POS_L            = $AF0DEE
=$af0def				SP61_Y_POS_H            = $AF0DEF
=$af0df0				SP62_CONTROL_REG        = $AF0DF0
=$af0df1				SP62_ADDY_PTR_L         = $AF0DF1
=$af0df2				SP62_ADDY_PTR_M         = $AF0DF2
=$af0df3				SP62_ADDY_PTR_H         = $AF0DF3
=$af0df4				SP62_X_POS_L            = $AF0DF4
=$af0df5				SP62_X_POS_H            = $AF0DF5
=$af0df6				SP62_Y_POS_L            = $AF0DF6
=$af0df7				SP62_Y_POS_H            = $AF0DF7
=$af0df8				SP63_CONTROL_REG        = $AF0DF8
=$af0df9				SP63_ADDY_PTR_L         = $AF0DF9
=$af0dfa				SP63_ADDY_PTR_M         = $AF0DFA
=$af0dfb				SP63_ADDY_PTR_H         = $AF0DFB
=$af0dfc				SP63_X_POS_L            = $AF0DFC
=$af0dfd				SP63_X_POS_H            = $AF0DFD
=$af0dfe				SP63_Y_POS_L            = $AF0DFE
=$af0dff				SP63_Y_POS_H            = $AF0DFF

;******  Return to file: lesson3.asm

=$b00000				SP0_VRAM = $B00000                      ; This is where we will save the sprite bitmap... beginning of VRAM
=$002000				SP0_X = $002000                         ; Bank 0 variable: Sprite #0 x position (16-bits)
=$002002				SP0_Y = $002002                         ; Bank 0 variable: Sprite #0 y position (16-bits)
=$00104c				FK_GETCHW = $00104c                     ; Kernel routine: Get a character from the input channel.
=$0010a8				FK_CLRSCREEN = $0010A8                  ; Clear the screen
=64					MIN_Y = 64                              ; Minimum Y value (VICKY specific... leaves room for border and sprite margin)
=64					MIN_X = 64                              ; Minimum X value (VICKY specific... leaves room for border and sprite margin)
=448					MAX_Y = 480 - 32                        ; Maximum Y value (VICKY specific... leaves room for border and sprite margin)
=608					MAX_X = 640 - 32                        ; Maximum X value (VICKY specific... leaves room for border and sprite margin)
.010000					START
.010000	e2 20		sep #$20	                SEP #$20
.010002	c2 10		rep #$10	                REP #$10
.010004	22 a8 10 00	jsl $0010a8	                JSL FK_CLRSCREEN        ; Clear the text screen
.010008					INITLUT
.010008	a2 00 00	ldx #$0000	                LDX #0                  ; Set X to point to the first byte
.01000b	bf d6 04 01	lda $0104d6,x	LUTLOOP         LDA @l LUT_START,X      ; Get a byte of the color table
.01000f	9f 00 20 af	sta $af2000,x	                STA @l GRPH_LUT0_PTR,X  ; Save it to Vicky's Graphics LUT#0
.010013	e8		inx		                INX                     ; Move to the next byte
.010014	e0 00 04	cpx #$0400	                CPX #256*4              ; Check to see if we've reached the limit
.010017	d0 f2		bne $01000b	                BNE LUTLOOP             ; No: copy this next byte too
.010019					INITBITMAP
.010019	a2 00 00	ldx #$0000	                LDX #0                  ; Set X to point to the first byte
.01001c	bf d6 00 01	lda $0100d6,x	BITMAPLOOP      LDA @l IMG_START,X      ; Get a byte of bitmap data
.010020	9f 00 00 b0	sta $b00000,x	                STA @l SP0_VRAM,X       ; Save it to Video RAM
.010024	e8		inx		                INX                     ; Move to the next byte
.010025	e0 00 04	cpx #$0400	                CPX #32*32              ; Check to see if we've reached the limit
.010028	d0 f2		bne $01001c	                BNE BITMAPLOOP          ; No: copy this next byte too
.01002a					SHOWSPRITE
.01002a	a9 27		lda #$27	                LDA #Mstr_Ctrl_Text_Mode_En | Mstr_Ctrl_Text_Overlay | Mstr_Ctrl_Graph_Mode_En | Mstr_Ctrl_Sprite_En
.01002c	8f 00 00 af	sta $af0000	                STA @l MASTER_CTRL_REG_L
.010030	a9 01		lda #$01	                LDA #$01                ; Enable Sprite #0
.010032	8f 00 0c af	sta $af0c00	                STA @l SP00_CONTROL_REG
.010036	a9 00		lda #$00	                LDA #0                  ; Tell Vicky that the sprite is at the start of VRAM
.010038	8f 01 0c af	sta $af0c01	                STA @l SP00_ADDY_PTR_L
.01003c	8f 02 0c af	sta $af0c02	                STA @l SP00_ADDY_PTR_M
.010040	8f 03 0c af	sta $af0c03	                STA @l SP00_ADDY_PTR_H
.010044	a9 64		lda #$64	                LDA #100
.010046	8f 00 20 00	sta $002000	                STA @l SP0_X
.01004a	8f 02 20 00	sta $002002	                STA @l SP0_Y
.01004e	20 c1 00	jsr $0100c1	                JSR SP0AT               ; Set position to (100, 100)
.010051					get_key
.010051	e2 20		sep #$20	                SEP #$20
.010053	22 4c 10 00	jsl $00104c	                JSL FK_GETCHW           ; Wait for a keypress. It will be returned in A
.010057	c9 57		cmp #$57	                CMP #'W'
.010059	f0 1e		beq $010079	                BEQ do_up
.01005b	c9 77		cmp #$77	                CMP #'w'
.01005d	f0 1a		beq $010079	                BEQ do_up               ; W -> move sprite up
.01005f	c9 53		cmp #$53	                CMP #'S'
.010061	f0 24		beq $010087	                BEQ do_down
.010063	c9 73		cmp #$73	                CMP #'s'
.010065	f0 20		beq $010087	                BEQ do_down             ; S -> move sprite down
.010067	c9 41		cmp #$41	                CMP #'A'
.010069	f0 32		beq $01009d	                BEQ do_left
.01006b	c9 61		cmp #$61	                CMP #'a'
.01006d	f0 2e		beq $01009d	                BEQ do_left             ; A -> move sprite left
.01006f	c9 44		cmp #$44	                CMP #'D'
.010071	f0 38		beq $0100ab	                BEQ do_right
.010073	c9 64		cmp #$64	                CMP #'d'
.010075	f0 34		beq $0100ab	                BEQ do_right            ; D -> move sprite right
.010077	80 d8		bra $010051	                BRA get_key             ; Otherwise: go back to waiting
.010079					do_up
.010079	c2 20		rep #$20	                REP #$20
.01007b	af 02 20 00	lda $002002	                LDA @l SP0_Y            ; Decrement the row #
.01007f	3a		dec a		                DEC A
.010080	c9 40 00	cmp #$0040	                CMP #MIN_Y              ; Y < MIN_Y?
.010083	b0 10		bcs $010095	                BGE set_y               ; No: update the row #
.010085	80 ca		bra $010051	                BRA get_key             ; Otherwise: ignore the keypress
.010087					do_down
.010087	c2 20		rep #$20	                REP #$20
.010089	af 02 20 00	lda $002002	                LDA @l SP0_Y            ; Increment the row #
.01008d	1a		inc a		                INC A
.01008e	c9 c0 01	cmp #$01c0	                CMP #MAX_Y              ; Y >= MAX_Y?
.010091	90 02		bcc $010095	                BLT set_y               ; No: update the row #
.010093	80 bc		bra $010051	                BRA get_key             ; Otherwise: ignore the keypress
.010095	8d 02 20	sta $2002	set_y           STA SP0_Y               ; Save the updated Y value
.010098	20 c1 00	jsr $0100c1	                JSR SP0AT               ; And move the sprite
.01009b	80 b4		bra $010051	                BRA get_key             ; Wait for another keypress
.01009d					do_left
.01009d	c2 20		rep #$20	                REP #$20
.01009f	af 00 20 00	lda $002000	                LDA @l SP0_X            ; Decrement the column #
.0100a3	3a		dec a		                DEC A
.0100a4	c9 40 00	cmp #$0040	                CMP #MIN_X              ; X < MIN_X?
.0100a7	b0 10		bcs $0100b9	                BGE set_x               ; No: update the column #
.0100a9	80 a6		bra $010051	                BRA get_key             ; Otherwise: ignore the keypress
.0100ab					do_right
.0100ab	c2 20		rep #$20	                REP #$20
.0100ad	af 00 20 00	lda $002000	                LDA @l SP0_X            ; Increment the column #
.0100b1	1a		inc a		                INC A
.0100b2	c9 60 02	cmp #$0260	                CMP #MAX_X              ; X >= MAX_X?
.0100b5	90 02		bcc $0100b9	                BLT set_x               ; No: update the column #
.0100b7	80 98		bra $010051	                BRA get_key             ; Otherwise: ignore the keypress
.0100b9	8d 00 20	sta $2000	set_x           STA SP0_X               ; Save the updated X value
.0100bc	20 c1 00	jsr $0100c1	                JSR SP0AT               ; And move the sprite
.0100bf	80 90		bra $010051	                BRA get_key             ; Wait for another keypress
.0100c1					SP0AT
.0100c1	08		php		                PHP                     ; Save status (including register sizes)
.0100c2	c2 20		rep #$20	                REP #$20
.0100c4	af 00 20 00	lda $002000	                LDA @l SP0_X            ; Get the x position
.0100c8	8f 04 0c af	sta $af0c04	                STA @l SP00_X_POS_L     ; Set the x position
.0100cc	af 02 20 00	lda $002002	                LDA @l SP0_Y            ; Get the y position
.0100d0	8f 06 0c af	sta $af0c06	                STA @l SP00_Y_POS_L     ; Set the y position
.0100d4	28		plp		                PLP                     ; Restore the register sizes
.0100d5	60		rts		                RTS                     ; Return to the caller

;******  Processing file: bitmap.asm

=$0100d6				IMG_START = *
>0100d6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0100de	00 00 00 00 00 00 00 00
>0100e6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0100ee	00 00 00 00 00 00 00 00
>0100f6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0100fe	00 00 00 00 00 00 00 00
>010106	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01010e	00 00 00 00 00 00 00 00
>010116	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0
>01011e	00 00 00 00 00 17 00 00
>010126	00 00 17 00 00 00 00 00		.byte 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01012e	00 00 00 00 00 00 00 00
>010136	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0
>01013e	00 00 00 00 00 17 00 00
>010146	00 00 17 00 00 00 00 00		.byte 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01014e	00 00 00 00 00 00 00 00
>010156	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 23, 0, 0
>01015e	00 00 00 00 17 17 00 00
>010166	00 00 17 17 00 00 00 00		.byte 0, 0, 23, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01016e	00 00 00 00 00 00 00 00
>010176	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 23, 23, 0, 0
>01017e	00 00 00 28 17 17 00 00
>010186	00 00 17 17 30 00 00 00		.byte 0, 0, 23, 23, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01018e	00 00 00 00 00 00 00 00
>010196	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 23, 23, 0, 0
>01019e	00 00 00 16 17 17 00 00
>0101a6	00 00 17 17 16 00 00 00		.byte 0, 0, 23, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0101ae	00 00 00 00 00 00 00 00
>0101b6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 23, 23, 0, 0
>0101be	00 00 00 16 17 17 00 00
>0101c6	00 00 17 17 16 00 00 00		.byte 0, 0, 23, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0101ce	00 00 00 00 00 00 00 00
>0101d6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 22, 23, 23, 0, 0
>0101de	00 00 16 16 17 17 00 00
>0101e6	00 00 17 17 16 16 00 00		.byte 0, 0, 23, 23, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0101ee	00 00 00 00 00 00 00 00
>0101f6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 22, 23, 23, 22, 0
>0101fe	00 00 16 16 17 17 16 00
>010206	00 16 17 17 16 16 00 00		.byte 0, 22, 23, 23, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01020e	00 00 00 00 00 00 00 00
>010216	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 22, 31, 23, 22, 23
>01021e	00 15 16 16 1f 17 16 17
>010226	17 16 17 1f 16 16 15 00		.byte 23, 22, 23, 31, 22, 22, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01022e	00 00 00 00 00 00 00 00
>010236	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 22, 31, 23, 22, 23
>01023e	00 15 16 16 1f 17 16 17
>010246	17 16 17 1f 16 16 15 00		.byte 23, 22, 23, 31, 22, 22, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01024e	00 00 00 00 00 00 00 00
>010256	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 21, 21, 22, 22, 31, 23, 22, 23
>01025e	15 15 16 16 1f 17 16 17
>010266	17 16 17 1f 16 16 15 15		.byte 23, 22, 23, 31, 22, 22, 21, 21, 0, 0, 0, 0, 0, 0, 0, 0
>01026e	00 00 00 00 00 00 00 00
>010276	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 21, 21, 22, 22, 31, 23, 22, 100
>01027e	15 15 16 16 1f 17 16 64
>010286	64 16 17 1f 16 16 15 15		.byte 100, 22, 23, 31, 22, 22, 21, 21, 0, 0, 0, 0, 0, 0, 0, 0
>01028e	00 00 00 00 00 00 00 00
>010296	00 00 00 00 00 00 00 14		.byte 0, 0, 0, 0, 0, 0, 0, 20, 21, 21, 22, 31, 23, 23, 101, 100
>01029e	15 15 16 1f 17 17 65 64
>0102a6	64 65 17 17 1f 16 15 15		.byte 100, 101, 23, 23, 31, 22, 21, 21, 20, 0, 0, 0, 0, 0, 0, 0
>0102ae	14 00 00 00 00 00 00 00
>0102b6	00 00 00 00 00 00 00 14		.byte 0, 0, 0, 0, 0, 0, 0, 20, 21, 21, 31, 22, 23, 23, 101, 100
>0102be	15 15 1f 16 17 17 65 64
>0102c6	64 65 17 17 16 1f 15 15		.byte 100, 101, 23, 23, 22, 31, 21, 21, 20, 0, 0, 0, 0, 0, 0, 0
>0102ce	14 00 00 00 00 00 00 00
>0102d6	00 00 00 00 00 00 14 14		.byte 0, 0, 0, 0, 0, 0, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>0102de	15 15 1f 16 17 66 65 64
>0102e6	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 0, 0, 0, 0, 0, 0
>0102ee	14 14 00 00 00 00 00 00
>0102f6	00 00 00 00 00 00 14 14		.byte 0, 0, 0, 0, 0, 0, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>0102fe	15 15 1f 16 17 66 65 64
>010306	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 0, 0, 0, 0, 0, 0
>01030e	14 14 00 00 00 00 00 00
>010316	00 00 00 00 00 14 14 14		.byte 0, 0, 0, 0, 0, 20, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>01031e	15 15 1f 16 17 66 65 64
>010326	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 20, 0, 0, 0, 0, 0
>01032e	14 14 14 00 00 00 00 00
>010336	00 00 00 00 28 14 14 14		.byte 0, 0, 0, 0, 40, 20, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>01033e	15 15 1f 16 17 66 65 64
>010346	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 20, 48, 0, 0, 0, 0
>01034e	14 14 14 30 00 00 00 00
>010356	00 00 00 00 15 14 14 14		.byte 0, 0, 0, 0, 21, 20, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>01035e	15 15 1f 16 17 66 65 64
>010366	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 20, 21, 0, 0, 0, 0
>01036e	14 14 14 15 00 00 00 00
>010376	00 00 00 00 15 14 14 14		.byte 0, 0, 0, 0, 21, 20, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>01037e	15 15 1f 16 17 66 65 64
>010386	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 20, 21, 0, 0, 0, 0
>01038e	14 14 14 15 00 00 00 00
>010396	00 00 00 17 15 14 14 14		.byte 0, 0, 0, 23, 21, 20, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>01039e	15 15 1f 16 17 66 65 64
>0103a6	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 20, 21, 23, 0, 0, 0
>0103ae	14 14 14 15 17 00 00 00
>0103b6	00 00 00 17 15 14 14 14		.byte 0, 0, 0, 23, 21, 20, 20, 20, 21, 21, 31, 22, 23, 102, 101, 100
>0103be	15 15 1f 16 17 66 65 64
>0103c6	64 65 66 17 16 1f 15 15		.byte 100, 101, 102, 23, 22, 31, 21, 21, 20, 20, 20, 21, 23, 0, 0, 0
>0103ce	14 14 14 15 17 00 00 00
>0103d6	00 00 00 00 15 14 14 14		.byte 0, 0, 0, 0, 21, 20, 20, 20, 21, 21, 31, 22, 23, 20, 22, 22
>0103de	15 15 1f 16 17 14 16 16
>0103e6	16 16 14 17 16 1f 15 15		.byte 22, 22, 20, 23, 22, 31, 21, 21, 20, 20, 20, 21, 0, 0, 0, 0
>0103ee	14 14 14 15 00 00 00 00
>0103f6	00 00 00 00 00 00 14 14		.byte 0, 0, 0, 0, 0, 0, 20, 20, 21, 21, 22, 22, 23, 23, 22, 22
>0103fe	15 15 16 16 17 17 16 16
>010406	16 16 17 17 16 16 15 15		.byte 22, 22, 23, 23, 22, 22, 21, 21, 20, 20, 0, 0, 0, 0, 0, 0
>01040e	14 14 00 00 00 00 00 00
>010416	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 21, 21, 22, 22, 23, 23, 22, 23
>01041e	15 15 16 16 17 17 16 17
>010426	17 16 17 17 16 16 15 15		.byte 23, 22, 23, 23, 22, 22, 21, 21, 0, 0, 0, 0, 0, 0, 0, 0
>01042e	00 00 00 00 00 00 00 00
>010436	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 22, 23, 23, 22, 23
>01043e	00 00 16 16 17 17 16 17
>010446	17 16 17 17 16 16 00 00		.byte 23, 22, 23, 23, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01044e	00 00 00 00 00 00 00 00
>010456	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 21, 21, 21
>01045e	00 00 00 00 15 15 15 15
>010466	15 15 15 15 00 00 00 00		.byte 21, 21, 21, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01046e	00 00 00 00 00 00 00 00
>010476	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 21, 21, 21
>01047e	00 00 00 00 15 15 15 15
>010486	15 15 15 15 00 00 00 00		.byte 21, 21, 21, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01048e	00 00 00 00 00 00 00 00
>010496	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>01049e	00 00 00 00 00 00 00 00
>0104a6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0104ae	00 00 00 00 00 00 00 00
>0104b6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0104be	00 00 00 00 00 00 00 00
>0104c6	00 00 00 00 00 00 00 00		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
>0104ce	00 00 00 00 00 00 00 00
=$0104d6				IMG_END = *

;******  Return to file: lesson3.asm


;******  Processing file: colors.asm

.0104d6					LUT_START
>0104d6	00 00 00 00			.byte 0, 0, 0, 0
>0104da	aa 00 00 00			.byte 170, 0, 0, 0
>0104de	00 aa 00 00			.byte 0, 170, 0, 0
>0104e2	aa aa 00 00			.byte 170, 170, 0, 0
>0104e6	00 00 aa 00			.byte 0, 0, 170, 0
>0104ea	aa 00 aa 00			.byte 170, 0, 170, 0
>0104ee	00 55 aa 00			.byte 0, 85, 170, 0
>0104f2	aa aa aa 00			.byte 170, 170, 170, 0
>0104f6	55 55 55 00			.byte 85, 85, 85, 0
>0104fa	ff 55 55 00			.byte 255, 85, 85, 0
>0104fe	55 ff 55 00			.byte 85, 255, 85, 0
>010502	ff ff 55 00			.byte 255, 255, 85, 0
>010506	55 55 ff 00			.byte 85, 85, 255, 0
>01050a	ff 55 ff 00			.byte 255, 85, 255, 0
>01050e	55 ff ff 00			.byte 85, 255, 255, 0
>010512	ff ff ff 00			.byte 255, 255, 255, 0
>010516	00 00 00 00			.byte 0, 0, 0, 0
>01051a	10 10 10 00			.byte 16, 16, 16, 0
>01051e	20 20 20 00			.byte 32, 32, 32, 0
>010522	35 35 35 00			.byte 53, 53, 53, 0
>010526	45 45 45 00			.byte 69, 69, 69, 0
>01052a	55 55 55 00			.byte 85, 85, 85, 0
>01052e	65 65 65 00			.byte 101, 101, 101, 0
>010532	75 75 75 00			.byte 117, 117, 117, 0
>010536	8a 8a 8a 00			.byte 138, 138, 138, 0
>01053a	9a 9a 9a 00			.byte 154, 154, 154, 0
>01053e	aa aa aa 00			.byte 170, 170, 170, 0
>010542	ba ba ba 00			.byte 186, 186, 186, 0
>010546	ca ca ca 00			.byte 202, 202, 202, 0
>01054a	df df df 00			.byte 223, 223, 223, 0
>01054e	ef ef ef 00			.byte 239, 239, 239, 0
>010552	ff ff ff 00			.byte 255, 255, 255, 0
>010556	ff 00 00 00			.byte 255, 0, 0, 0
>01055a	ff 00 41 00			.byte 255, 0, 65, 0
>01055e	ff 00 82 00			.byte 255, 0, 130, 0
>010562	ff 00 be 00			.byte 255, 0, 190, 0
>010566	ff 00 ff 00			.byte 255, 0, 255, 0
>01056a	be 00 ff 00			.byte 190, 0, 255, 0
>01056e	82 00 ff 00			.byte 130, 0, 255, 0
>010572	41 00 ff 00			.byte 65, 0, 255, 0
>010576	00 00 ff 00			.byte 0, 0, 255, 0
>01057a	00 41 ff 00			.byte 0, 65, 255, 0
>01057e	00 82 ff 00			.byte 0, 130, 255, 0
>010582	00 be ff 00			.byte 0, 190, 255, 0
>010586	00 ff ff 00			.byte 0, 255, 255, 0
>01058a	00 ff be 00			.byte 0, 255, 190, 0
>01058e	00 ff 82 00			.byte 0, 255, 130, 0
>010592	00 ff 41 00			.byte 0, 255, 65, 0
>010596	00 ff 00 00			.byte 0, 255, 0, 0
>01059a	41 ff 00 00			.byte 65, 255, 0, 0
>01059e	82 ff 00 00			.byte 130, 255, 0, 0
>0105a2	be ff 00 00			.byte 190, 255, 0, 0
>0105a6	ff ff 00 00			.byte 255, 255, 0, 0
>0105aa	ff be 00 00			.byte 255, 190, 0, 0
>0105ae	ff 82 00 00			.byte 255, 130, 0, 0
>0105b2	ff 41 00 00			.byte 255, 65, 0, 0
>0105b6	ff 82 82 00			.byte 255, 130, 130, 0
>0105ba	ff 82 9e 00			.byte 255, 130, 158, 0
>0105be	ff 82 be 00			.byte 255, 130, 190, 0
>0105c2	ff 82 df 00			.byte 255, 130, 223, 0
>0105c6	ff 82 ff 00			.byte 255, 130, 255, 0
>0105ca	df 82 ff 00			.byte 223, 130, 255, 0
>0105ce	be 82 ff 00			.byte 190, 130, 255, 0
>0105d2	9e 82 ff 00			.byte 158, 130, 255, 0
>0105d6	82 82 ff 00			.byte 130, 130, 255, 0
>0105da	82 9e ff 00			.byte 130, 158, 255, 0
>0105de	82 be ff 00			.byte 130, 190, 255, 0
>0105e2	82 df ff 00			.byte 130, 223, 255, 0
>0105e6	82 ff ff 00			.byte 130, 255, 255, 0
>0105ea	82 ff df 00			.byte 130, 255, 223, 0
>0105ee	82 ff be 00			.byte 130, 255, 190, 0
>0105f2	82 ff 9e 00			.byte 130, 255, 158, 0
>0105f6	82 ff 82 00			.byte 130, 255, 130, 0
>0105fa	9e ff 82 00			.byte 158, 255, 130, 0
>0105fe	be ff 82 00			.byte 190, 255, 130, 0
>010602	df ff 82 00			.byte 223, 255, 130, 0
>010606	ff ff 82 00			.byte 255, 255, 130, 0
>01060a	ff df 82 00			.byte 255, 223, 130, 0
>01060e	ff be 82 00			.byte 255, 190, 130, 0
>010612	ff 9e 82 00			.byte 255, 158, 130, 0
>010616	ff ba ba 00			.byte 255, 186, 186, 0
>01061a	ff ba ca 00			.byte 255, 186, 202, 0
>01061e	ff ba df 00			.byte 255, 186, 223, 0
>010622	ff ba ef 00			.byte 255, 186, 239, 0
>010626	ff ba ff 00			.byte 255, 186, 255, 0
>01062a	ef ba ff 00			.byte 239, 186, 255, 0
>01062e	df ba ff 00			.byte 223, 186, 255, 0
>010632	ca ba ff 00			.byte 202, 186, 255, 0
>010636	ba ba ff 00			.byte 186, 186, 255, 0
>01063a	ba ca ff 00			.byte 186, 202, 255, 0
>01063e	ba df ff 00			.byte 186, 223, 255, 0
>010642	ba ef ff 00			.byte 186, 239, 255, 0
>010646	ba ff ff 00			.byte 186, 255, 255, 0
>01064a	ba ff ef 00			.byte 186, 255, 239, 0
>01064e	ba ff df 00			.byte 186, 255, 223, 0
>010652	ba ff ca 00			.byte 186, 255, 202, 0
>010656	ba ff ba 00			.byte 186, 255, 186, 0
>01065a	ca ff ba 00			.byte 202, 255, 186, 0
>01065e	df ff ba 00			.byte 223, 255, 186, 0
>010662	ef ff ba 00			.byte 239, 255, 186, 0
>010666	ff ff ba 00			.byte 255, 255, 186, 0
>01066a	ff ef ba 00			.byte 255, 239, 186, 0
>01066e	ff df ba 00			.byte 255, 223, 186, 0
>010672	ff ca ba 00			.byte 255, 202, 186, 0
>010676	71 00 00 00			.byte 113, 0, 0, 0
>01067a	71 00 1c 00			.byte 113, 0, 28, 0
>01067e	71 00 39 00			.byte 113, 0, 57, 0
>010682	71 00 55 00			.byte 113, 0, 85, 0
>010686	71 00 71 00			.byte 113, 0, 113, 0
>01068a	55 00 71 00			.byte 85, 0, 113, 0
>01068e	39 00 71 00			.byte 57, 0, 113, 0
>010692	1c 00 71 00			.byte 28, 0, 113, 0
>010696	00 00 71 00			.byte 0, 0, 113, 0
>01069a	00 1c 71 00			.byte 0, 28, 113, 0
>01069e	00 39 71 00			.byte 0, 57, 113, 0
>0106a2	00 55 71 00			.byte 0, 85, 113, 0
>0106a6	00 71 71 00			.byte 0, 113, 113, 0
>0106aa	00 71 55 00			.byte 0, 113, 85, 0
>0106ae	00 71 39 00			.byte 0, 113, 57, 0
>0106b2	00 71 1c 00			.byte 0, 113, 28, 0
>0106b6	00 71 00 00			.byte 0, 113, 0, 0
>0106ba	1c 71 00 00			.byte 28, 113, 0, 0
>0106be	39 71 00 00			.byte 57, 113, 0, 0
>0106c2	55 71 00 00			.byte 85, 113, 0, 0
>0106c6	71 71 00 00			.byte 113, 113, 0, 0
>0106ca	71 55 00 00			.byte 113, 85, 0, 0
>0106ce	71 39 00 00			.byte 113, 57, 0, 0
>0106d2	71 1c 00 00			.byte 113, 28, 0, 0
>0106d6	71 39 39 00			.byte 113, 57, 57, 0
>0106da	71 39 45 00			.byte 113, 57, 69, 0
>0106de	71 39 55 00			.byte 113, 57, 85, 0
>0106e2	71 39 61 00			.byte 113, 57, 97, 0
>0106e6	71 39 71 00			.byte 113, 57, 113, 0
>0106ea	61 39 71 00			.byte 97, 57, 113, 0
>0106ee	55 39 71 00			.byte 85, 57, 113, 0
>0106f2	45 39 71 00			.byte 69, 57, 113, 0
>0106f6	39 39 71 00			.byte 57, 57, 113, 0
>0106fa	39 45 71 00			.byte 57, 69, 113, 0
>0106fe	39 55 71 00			.byte 57, 85, 113, 0
>010702	39 61 71 00			.byte 57, 97, 113, 0
>010706	39 71 71 00			.byte 57, 113, 113, 0
>01070a	39 71 61 00			.byte 57, 113, 97, 0
>01070e	39 71 55 00			.byte 57, 113, 85, 0
>010712	39 71 45 00			.byte 57, 113, 69, 0
>010716	39 71 39 00			.byte 57, 113, 57, 0
>01071a	45 71 39 00			.byte 69, 113, 57, 0
>01071e	55 71 39 00			.byte 85, 113, 57, 0
>010722	61 71 39 00			.byte 97, 113, 57, 0
>010726	71 71 39 00			.byte 113, 113, 57, 0
>01072a	71 61 39 00			.byte 113, 97, 57, 0
>01072e	71 55 39 00			.byte 113, 85, 57, 0
>010732	71 45 39 00			.byte 113, 69, 57, 0
>010736	71 51 51 00			.byte 113, 81, 81, 0
>01073a	71 51 59 00			.byte 113, 81, 89, 0
>01073e	71 51 61 00			.byte 113, 81, 97, 0
>010742	71 51 69 00			.byte 113, 81, 105, 0
>010746	71 51 71 00			.byte 113, 81, 113, 0
>01074a	69 51 71 00			.byte 105, 81, 113, 0
>01074e	61 51 71 00			.byte 97, 81, 113, 0
>010752	59 51 71 00			.byte 89, 81, 113, 0
>010756	51 51 71 00			.byte 81, 81, 113, 0
>01075a	51 59 71 00			.byte 81, 89, 113, 0
>01075e	51 61 71 00			.byte 81, 97, 113, 0
>010762	51 69 71 00			.byte 81, 105, 113, 0
>010766	51 71 71 00			.byte 81, 113, 113, 0
>01076a	51 71 69 00			.byte 81, 113, 105, 0
>01076e	51 71 61 00			.byte 81, 113, 97, 0
>010772	51 71 59 00			.byte 81, 113, 89, 0
>010776	51 71 51 00			.byte 81, 113, 81, 0
>01077a	59 71 51 00			.byte 89, 113, 81, 0
>01077e	61 71 51 00			.byte 97, 113, 81, 0
>010782	69 71 51 00			.byte 105, 113, 81, 0
>010786	71 71 51 00			.byte 113, 113, 81, 0
>01078a	71 69 51 00			.byte 113, 105, 81, 0
>01078e	71 61 51 00			.byte 113, 97, 81, 0
>010792	71 59 51 00			.byte 113, 89, 81, 0
>010796	41 00 00 00			.byte 65, 0, 0, 0
>01079a	41 00 10 00			.byte 65, 0, 16, 0
>01079e	41 00 20 00			.byte 65, 0, 32, 0
>0107a2	41 00 31 00			.byte 65, 0, 49, 0
>0107a6	41 00 41 00			.byte 65, 0, 65, 0
>0107aa	31 00 41 00			.byte 49, 0, 65, 0
>0107ae	20 00 41 00			.byte 32, 0, 65, 0
>0107b2	10 00 41 00			.byte 16, 0, 65, 0
>0107b6	00 00 41 00			.byte 0, 0, 65, 0
>0107ba	00 10 41 00			.byte 0, 16, 65, 0
>0107be	00 20 41 00			.byte 0, 32, 65, 0
>0107c2	00 31 41 00			.byte 0, 49, 65, 0
>0107c6	00 41 41 00			.byte 0, 65, 65, 0
>0107ca	00 41 31 00			.byte 0, 65, 49, 0
>0107ce	00 41 20 00			.byte 0, 65, 32, 0
>0107d2	00 41 10 00			.byte 0, 65, 16, 0
>0107d6	00 41 00 00			.byte 0, 65, 0, 0
>0107da	10 41 00 00			.byte 16, 65, 0, 0
>0107de	20 41 00 00			.byte 32, 65, 0, 0
>0107e2	31 41 00 00			.byte 49, 65, 0, 0
>0107e6	41 41 00 00			.byte 65, 65, 0, 0
>0107ea	41 31 00 00			.byte 65, 49, 0, 0
>0107ee	41 20 00 00			.byte 65, 32, 0, 0
>0107f2	41 10 00 00			.byte 65, 16, 0, 0
>0107f6	41 20 20 00			.byte 65, 32, 32, 0
>0107fa	41 20 28 00			.byte 65, 32, 40, 0
>0107fe	41 20 31 00			.byte 65, 32, 49, 0
>010802	41 20 39 00			.byte 65, 32, 57, 0
>010806	41 20 41 00			.byte 65, 32, 65, 0
>01080a	39 20 41 00			.byte 57, 32, 65, 0
>01080e	31 20 41 00			.byte 49, 32, 65, 0
>010812	28 20 41 00			.byte 40, 32, 65, 0
>010816	20 20 41 00			.byte 32, 32, 65, 0
>01081a	20 28 41 00			.byte 32, 40, 65, 0
>01081e	20 31 41 00			.byte 32, 49, 65, 0
>010822	20 39 41 00			.byte 32, 57, 65, 0
>010826	20 41 41 00			.byte 32, 65, 65, 0
>01082a	20 41 39 00			.byte 32, 65, 57, 0
>01082e	20 41 31 00			.byte 32, 65, 49, 0
>010832	20 41 28 00			.byte 32, 65, 40, 0
>010836	20 41 20 00			.byte 32, 65, 32, 0
>01083a	28 41 20 00			.byte 40, 65, 32, 0
>01083e	31 41 20 00			.byte 49, 65, 32, 0
>010842	39 41 20 00			.byte 57, 65, 32, 0
>010846	41 41 20 00			.byte 65, 65, 32, 0
>01084a	41 39 20 00			.byte 65, 57, 32, 0
>01084e	41 31 20 00			.byte 65, 49, 32, 0
>010852	41 28 20 00			.byte 65, 40, 32, 0
>010856	41 2d 2d 00			.byte 65, 45, 45, 0
>01085a	41 2d 31 00			.byte 65, 45, 49, 0
>01085e	41 2d 35 00			.byte 65, 45, 53, 0
>010862	41 2d 3d 00			.byte 65, 45, 61, 0
>010866	41 2d 41 00			.byte 65, 45, 65, 0
>01086a	3d 2d 41 00			.byte 61, 45, 65, 0
>01086e	35 2d 41 00			.byte 53, 45, 65, 0
>010872	31 2d 41 00			.byte 49, 45, 65, 0
>010876	2d 2d 41 00			.byte 45, 45, 65, 0
>01087a	2d 31 41 00			.byte 45, 49, 65, 0
>01087e	2d 35 41 00			.byte 45, 53, 65, 0
>010882	2d 3d 41 00			.byte 45, 61, 65, 0
>010886	2d 41 41 00			.byte 45, 65, 65, 0
>01088a	2d 41 3d 00			.byte 45, 65, 61, 0
>01088e	2d 41 35 00			.byte 45, 65, 53, 0
>010892	2d 41 31 00			.byte 45, 65, 49, 0
>010896	2d 41 2d 00			.byte 45, 65, 45, 0
>01089a	31 41 2d 00			.byte 49, 65, 45, 0
>01089e	35 41 2d 00			.byte 53, 65, 45, 0
>0108a2	3d 41 2d 00			.byte 61, 65, 45, 0
>0108a6	41 41 2d 00			.byte 65, 65, 45, 0
>0108aa	41 3d 2d 00			.byte 65, 61, 45, 0
>0108ae	41 35 2d 00			.byte 65, 53, 45, 0
>0108b2	41 31 2d 00			.byte 65, 49, 45, 0
>0108b6	00 00 00 00			.byte 0, 0, 0, 0
>0108ba	00 00 00 00			.byte 0, 0, 0, 0
>0108be	00 00 00 00			.byte 0, 0, 0, 0
>0108c2	00 00 00 00			.byte 0, 0, 0, 0
>0108c6	00 00 00 00			.byte 0, 0, 0, 0
>0108ca	00 00 00 00			.byte 0, 0, 0, 0
>0108ce	00 00 00 00			.byte 0, 0, 0, 0
>0108d2	00 00 00 00			.byte 0, 0, 0, 0
=$0108d6				LUT_END = *

;******  Return to file: lesson3.asm


;******  End of listing
